/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { YuTouMintable, YuTouMintableInterface } from "../YuTouMintable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MintingFinished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finishMinting",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMinter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingFinished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c0604052600b60808190526a2cbaaa37ba903a37b5b2b760a91b60a09081526200002e9160009190620000ee565b50604080518082019091526005808252645975546f7560d81b60209092019182526200005d91600191620000ee565b5060028054600860ff199182168117909255683635c9adc5dea00000600355600060045581541690553480156200009357600080fd5b50620000af336007620000b560201b620008781790919060201c565b620001d1565b6001600160a01b038116620000c957600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b828054620000fc9062000194565b90600052602060002090601f0160209004810192826200012057600085556200016b565b82601f106200013b57805160ff19168380011785556200016b565b828001600101855582156200016b579182015b828111156200016b5782518255916020019190600101906200014e565b50620001799291506200017d565b5090565b5b808211156200017957600081556001016200017e565b600181811c90821680620001a957607f821691505b60208210811415620001cb57634e487b7160e01b600052602260045260246000fd5b50919050565b610b4d80620001e16000396000f3fe6080604052600436106100ec5760003560e01c806370a082311161008a5780639865027511610059578063986502751461027b578063a9059cbb14610290578063aa271e1a146102b0578063dd62ed3e146102d057600080fd5b806370a08231146101fb5780637d64bcb41461023157806395d89b4114610246578063983b2d561461025b57600080fd5b806318160ddd116100c657806318160ddd1461017a57806323b872dd14610199578063313ce567146101b957806340c10f19146101db57600080fd5b806305d2035b1461010f57806306fdde0314610138578063095ea7b31461015a57600080fd5b3661010a57600034116100fe57600080fd5b6101083334610316565b005b600080fd5b34801561011b57600080fd5b5060085460ff165b60405190151581526020015b60405180910390f35b34801561014457600080fd5b5061014d6103b9565b60405161012f9190610a44565b34801561016657600080fd5b50610123610175366004610a1b565b61044b565b34801561018657600080fd5b506003545b60405190815260200161012f565b3480156101a557600080fd5b506101236101b43660046109e0565b6104fc565b3480156101c557600080fd5b5060025460405160ff909116815260200161012f565b3480156101e757600080fd5b506101236101f6366004610a1b565b610678565b34801561020757600080fd5b5061018b610216366004610994565b6001600160a01b031660009081526006602052604090205490565b34801561023d57600080fd5b506101236106af565b34801561025257600080fd5b5061014d61070f565b34801561026757600080fd5b50610108610276366004610994565b61071e565b34801561028757600080fd5b50610108610772565b34801561029c57600080fd5b506101236102ab366004610a1b565b61077f565b3480156102bc57600080fd5b506101236102cb366004610994565b610865565b3480156102dc57600080fd5b5061018b6102eb3660046109ae565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b6001600160a01b03821661032957600080fd5b60035461033690826108b0565b6003556001600160a01b03821660009081526006602052604090205461035c90826108b0565b6001600160a01b0383166000818152600660205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103ad9085815260200190565b60405180910390a35050565b6060600080546103c890610ac6565b80601f01602080910402602001604051908101604052809291908181526020018280546103f490610ac6565b80156104415780601f1061041657610100808354040283529160200191610441565b820191906000526020600020905b81548152906001019060200180831161042457829003601f168201915b5050505050905090565b60006001600160a01b03831661046057600080fd5b81158061048e57503360009081526005602090815260408083206001600160a01b0387168452909152902054155b61049757600080fd5b3360008181526005602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a350600192915050565b6001600160a01b0383166000818152600560209081526040808320338452825280832054938352600690915281205490919083111561054b57634e487b7160e01b600052600160045260246000fd5b8281101561056957634e487b7160e01b600052600160045260246000fd5b6000831161058757634e487b7160e01b600052600160045260246000fd5b6001600160a01b03841661059a57600080fd5b6001600160a01b0385166000908152600660205260409020546105bd90846108e4565b6001600160a01b0380871660009081526006602052604080822093909355908616815220546105ec90846108b0565b6001600160a01b03851660009081526006602052604090205561060f81846108e4565b6001600160a01b03868116600081815260056020908152604080832033845282529182902094909455518681529187169290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3506001949350505050565b600061068333610865565b61068c57600080fd5b60085460ff161561069c57600080fd5b6106a68383610316565b50600192915050565b60006106ba33610865565b6106c357600080fd5b60085460ff16156106d357600080fd5b6008805460ff191660011790556040517fb828d9b5c78095deeeeff2eca2e5d4fe046ce3feb4c99702624a3fd384ad2dbc90600090a150600190565b6060600180546103c890610ac6565b61072733610865565b61073057600080fd5b61073b600782610878565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61077d60073361090e565b565b60008160001061079f57634e487b7160e01b600052600160045260246000fd5b336000908152600660205260409020548211156107bb57600080fd5b6001600160a01b0383166107ce57600080fd5b336000908152600660205260409020546107e890836108e4565b33600090815260066020526040808220929092556001600160a01b0385168152205461081490836108b0565b6001600160a01b0384166000818152600660205260409081902092909255905133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104eb9086815260200190565b6000610872600783610943565b92915050565b6001600160a01b03811661088b57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6000806108bd8385610a97565b9050838110156108dd57634e487b7160e01b600052600160045260246000fd5b9392505050565b60008282111561090457634e487b7160e01b600052600160045260246000fd5b6108dd8284610aaf565b6001600160a01b03811661092157600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006001600160a01b03821661095857600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b80356001600160a01b038116811461098f57600080fd5b919050565b6000602082840312156109a5578081fd5b6108dd82610978565b600080604083850312156109c0578081fd5b6109c983610978565b91506109d760208401610978565b90509250929050565b6000806000606084860312156109f4578081fd5b6109fd84610978565b9250610a0b60208501610978565b9150604084013590509250925092565b60008060408385031215610a2d578182fd5b610a3683610978565b946020939093013593505050565b6000602080835283518082850152825b81811015610a7057858101830151858201604001528201610a54565b81811115610a815783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610aaa57610aaa610b01565b500190565b600082821015610ac157610ac1610b01565b500390565b600181811c90821680610ada57607f821691505b60208210811415610afb57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a0d7dd1dedbc32188679cdce4f927d0b38e5036da663638348f81f7baca4adc464736f6c63430008040033";

type YuTouMintableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YuTouMintableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YuTouMintable__factory extends ContractFactory {
  constructor(...args: YuTouMintableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "YuTouMintable";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YuTouMintable> {
    return super.deploy(overrides || {}) as Promise<YuTouMintable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): YuTouMintable {
    return super.attach(address) as YuTouMintable;
  }
  connect(signer: Signer): YuTouMintable__factory {
    return super.connect(signer) as YuTouMintable__factory;
  }
  static readonly contractName: "YuTouMintable";
  public readonly contractName: "YuTouMintable";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YuTouMintableInterface {
    return new utils.Interface(_abi) as YuTouMintableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YuTouMintable {
    return new Contract(address, _abi, signerOrProvider) as YuTouMintable;
  }
}
